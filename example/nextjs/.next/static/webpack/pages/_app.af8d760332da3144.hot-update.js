"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./contexts/CrossChainContext.js":
/*!***************************************!*\
  !*** ./contexts/CrossChainContext.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CrossChainProvider: () => (/* binding */ CrossChainProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useCrossChain: () => (/* binding */ useCrossChain)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"(pages-dir-browser)/./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _Web3Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Web3Context */ \"(pages-dir-browser)/./contexts/Web3Context.js\");\n/* harmony import */ var _constants_abis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants/abis */ \"(pages-dir-browser)/./constants/abis.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nconst CrossChainContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction CrossChainProvider(param) {\n    let { children } = param;\n    _s();\n    const { provider, signer, account, chainId, switchNetwork } = (0,_Web3Context__WEBPACK_IMPORTED_MODULE_2__.useWeb3)();\n    // Chain configurations\n    const [chains, setChains] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        chainA: {\n            id: process.env.NEXT_PUBLIC_CHAIN_A_ID,\n            name: 'Ethereum',\n            rpcUrl: process.env.NEXT_PUBLIC_CHAIN_A_RPC_URL,\n            registryAddress: process.env.NEXT_PUBLIC_CHAIN_A_REGISTRY_ADDRESS,\n            bridgeAdapterAddress: process.env.NEXT_PUBLIC_CHAIN_A_BRIDGE_ADAPTER_ADDRESS,\n            provider: null,\n            registry: null,\n            bridgeAdapter: null,\n            connected: false\n        },\n        chainB: {\n            id: process.env.NEXT_PUBLIC_CHAIN_B_ID,\n            name: 'Polygon',\n            rpcUrl: process.env.NEXT_PUBLIC_CHAIN_B_RPC_URL,\n            registryAddress: process.env.NEXT_PUBLIC_CHAIN_B_REGISTRY_ADDRESS,\n            bridgeAdapterAddress: process.env.NEXT_PUBLIC_CHAIN_B_BRIDGE_ADAPTER_ADDRESS,\n            provider: null,\n            registry: null,\n            bridgeAdapter: null,\n            connected: false\n        }\n    });\n    // Current active chain\n    const [activeChain, setActiveChain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('chainA');\n    // Soul identities on different chains\n    const [soulIds, setSoulIds] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        chainA: null,\n        chainB: null\n    });\n    // Loading and error states\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Initialize providers and contracts for both chains\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CrossChainProvider.useEffect\": ()=>{\n            const initChains = {\n                \"CrossChainProvider.useEffect.initChains\": async ()=>{\n                    try {\n                        setLoading(true);\n                        const updatedChains = {\n                            ...chains\n                        };\n                        // Initialize Chain A\n                        if (chains.chainA.rpcUrl) {\n                            const providerA = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.JsonRpcProvider(chains.chainA.rpcUrl);\n                            updatedChains.chainA.provider = providerA;\n                            if (chains.chainA.registryAddress) {\n                                updatedChains.chainA.registry = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(chains.chainA.registryAddress, _constants_abis__WEBPACK_IMPORTED_MODULE_3__.REGISTRY_ABI, providerA);\n                            }\n                            if (chains.chainA.bridgeAdapterAddress) {\n                                updatedChains.chainA.bridgeAdapter = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(chains.chainA.bridgeAdapterAddress, _constants_abis__WEBPACK_IMPORTED_MODULE_3__.BRIDGE_ADAPTER_ABI, providerA);\n                            }\n                        }\n                        // Initialize Chain B\n                        if (chains.chainB.rpcUrl) {\n                            const providerB = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.JsonRpcProvider(chains.chainB.rpcUrl);\n                            updatedChains.chainB.provider = providerB;\n                            if (chains.chainB.registryAddress) {\n                                updatedChains.chainB.registry = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(chains.chainB.registryAddress, _constants_abis__WEBPACK_IMPORTED_MODULE_3__.REGISTRY_ABI, providerB);\n                            }\n                            if (chains.chainB.bridgeAdapterAddress) {\n                                updatedChains.chainB.bridgeAdapter = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(chains.chainB.bridgeAdapterAddress, _constants_abis__WEBPACK_IMPORTED_MODULE_3__.BRIDGE_ADAPTER_ABI, providerB);\n                            }\n                        }\n                        setChains(updatedChains);\n                    } catch (error) {\n                        console.error('Error initializing chains:', error);\n                        setError(error);\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"CrossChainProvider.useEffect.initChains\"];\n            initChains();\n        }\n    }[\"CrossChainProvider.useEffect\"], []);\n    // Update active chain based on connected wallet\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CrossChainProvider.useEffect\": ()=>{\n            if (!chainId) return;\n            const chainIdStr = chainId.toString();\n            if (chainIdStr === chains.chainA.id) {\n                setActiveChain('chainA');\n                // Update connected status\n                setChains({\n                    \"CrossChainProvider.useEffect\": (prev)=>({\n                            ...prev,\n                            chainA: {\n                                ...prev.chainA,\n                                connected: true\n                            },\n                            chainB: {\n                                ...prev.chainB,\n                                connected: false\n                            }\n                        })\n                }[\"CrossChainProvider.useEffect\"]);\n            } else if (chainIdStr === chains.chainB.id) {\n                setActiveChain('chainB');\n                // Update connected status\n                setChains({\n                    \"CrossChainProvider.useEffect\": (prev)=>({\n                            ...prev,\n                            chainA: {\n                                ...prev.chainA,\n                                connected: false\n                            },\n                            chainB: {\n                                ...prev.chainB,\n                                connected: true\n                            }\n                        })\n                }[\"CrossChainProvider.useEffect\"]);\n            } else {\n                // Not connected to either chain\n                setChains({\n                    \"CrossChainProvider.useEffect\": (prev)=>({\n                            ...prev,\n                            chainA: {\n                                ...prev.chainA,\n                                connected: false\n                            },\n                            chainB: {\n                                ...prev.chainB,\n                                connected: false\n                            }\n                        })\n                }[\"CrossChainProvider.useEffect\"]);\n            }\n        }\n    }[\"CrossChainProvider.useEffect\"], [\n        chainId,\n        chains.chainA.id,\n        chains.chainB.id\n    ]);\n    // Get soul identities on both chains\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CrossChainProvider.useEffect\": ()=>{\n            const getSoulIdentities = {\n                \"CrossChainProvider.useEffect.getSoulIdentities\": async ()=>{\n                    if (!account) {\n                        setSoulIds({\n                            chainA: null,\n                            chainB: null\n                        });\n                        return;\n                    }\n                    try {\n                        const updatedSoulIds = {\n                            ...soulIds\n                        };\n                        // Get soul identity on Chain A\n                        if (chains.chainA.registry) {\n                            try {\n                                const soulIdsA = await chains.chainA.registry.getUserSoulIdentities(account);\n                                updatedSoulIds.chainA = soulIdsA.length > 0 ? soulIdsA[0] : null;\n                            } catch (e) {\n                                console.error('Error getting soul identity on Chain A:', e);\n                            }\n                        }\n                        // Get soul identity on Chain B\n                        if (chains.chainB.registry) {\n                            try {\n                                const soulIdsB = await chains.chainB.registry.getUserSoulIdentities(account);\n                                updatedSoulIds.chainB = soulIdsB.length > 0 ? soulIdsB[0] : null;\n                            } catch (e) {\n                                console.error('Error getting soul identity on Chain B:', e);\n                            }\n                        }\n                        setSoulIds(updatedSoulIds);\n                    } catch (error) {\n                        console.error('Error getting soul identities:', error);\n                        setError(error);\n                    }\n                }\n            }[\"CrossChainProvider.useEffect.getSoulIdentities\"];\n            getSoulIdentities();\n        }\n    }[\"CrossChainProvider.useEffect\"], [\n        account,\n        chains.chainA.registry,\n        chains.chainB.registry\n    ]);\n    // Switch to a specific chain\n    const switchToChain = async (chain)=>{\n        if (!switchNetwork) return;\n        try {\n            const targetChainId = parseInt(chains[chain].id);\n            await switchNetwork(targetChainId);\n            setActiveChain(chain);\n        } catch (error) {\n            console.error(\"Error switching to \".concat(chain, \":\"), error);\n            throw error;\n        }\n    };\n    // Create soul identity on current chain\n    const createSoulIdentity = async ()=>{\n        if (!account || !signer || !chains[activeChain].registry) {\n            throw new Error('Not connected to chain or registry not available');\n        }\n        try {\n            // Create a random app salt\n            const appSalt = ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.keccak256(ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.toUtf8Bytes(\"soulstream-\".concat(Date.now())));\n            // Connect registry with signer\n            const registry = chains[activeChain].registry.connect(signer);\n            // Create soul identity\n            const tx = await registry.createSoulIdentity(account, appSalt, ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.ZeroHash, ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.ZeroHash);\n            // Wait for transaction to be mined\n            const receipt = await tx.wait();\n            // Get the soul identity address from the event\n            let newSoulId;\n            for (const log of receipt.logs){\n                try {\n                    const parsedLog = registry.interface.parseLog({\n                        topics: log.topics,\n                        data: log.data\n                    });\n                    if (parsedLog && parsedLog.name === 'SoulIdentityCreated') {\n                        newSoulId = parsedLog.args[1];\n                        break;\n                    }\n                } catch (e) {\n                    continue;\n                }\n            }\n            if (newSoulId) {\n                // Update soul IDs\n                setSoulIds((prev)=>({\n                        ...prev,\n                        [activeChain]: newSoulId\n                    }));\n                return newSoulId;\n            }\n            throw new Error('Failed to get soul identity address from event');\n        } catch (error) {\n            console.error('Error creating soul identity:', error);\n            throw error;\n        }\n    };\n    // Route reputation across chains\n    const routeReputationCrossChain = async (fromChain, toChain, amount)=>{\n        if (!signer || !account) {\n            throw new Error('Wallet not connected');\n        }\n        if (!soulIds[fromChain] || !soulIds[toChain]) {\n            throw new Error('Soul identities not available on both chains');\n        }\n        if (!chains[fromChain].bridgeAdapter) {\n            throw new Error('Bridge adapter not available');\n        }\n        try {\n            // Switch to source chain\n            await switchToChain(fromChain);\n            // Connect bridge adapter with signer\n            const bridgeAdapter = chains[fromChain].bridgeAdapter.connect(signer);\n            // Get destination chain ID\n            const destinationChainId = parseInt(chains[toChain].id);\n            // Route reputation cross-chain\n            const tx = await bridgeAdapter.routeReputationCrossChain(soulIds[fromChain], soulIds[toChain], amount, destinationChainId, {\n                value: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.parseEther('0.01')\n            } // Gas fee for cross-chain message\n            );\n            // Wait for transaction to be mined\n            const receipt = await tx.wait();\n            return receipt;\n        } catch (error) {\n            console.error('Error routing reputation cross-chain:', error);\n            throw error;\n        }\n    };\n    // Route rewards across chains\n    const routeRewardsCrossChain = async (fromChain, toChain, amount)=>{\n        if (!signer || !account) {\n            throw new Error('Wallet not connected');\n        }\n        if (!soulIds[fromChain] || !soulIds[toChain]) {\n            throw new Error('Soul identities not available on both chains');\n        }\n        if (!chains[fromChain].bridgeAdapter) {\n            throw new Error('Bridge adapter not available');\n        }\n        try {\n            // Switch to source chain\n            await switchToChain(fromChain);\n            // Connect bridge adapter with signer\n            const bridgeAdapter = chains[fromChain].bridgeAdapter.connect(signer);\n            // Get destination chain ID\n            const destinationChainId = parseInt(chains[toChain].id);\n            // Route rewards cross-chain\n            const tx = await bridgeAdapter.routeRewardsCrossChain(soulIds[fromChain], soulIds[toChain], amount, destinationChainId, {\n                value: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.parseEther('0.01')\n            } // Gas fee for cross-chain message\n            );\n            // Wait for transaction to be mined\n            const receipt = await tx.wait();\n            return receipt;\n        } catch (error) {\n            console.error('Error routing rewards cross-chain:', error);\n            throw error;\n        }\n    };\n    // Get reputation on a specific chain\n    const getReputationOnChain = async (chain, soulId)=>{\n        if (!chains[chain].provider) {\n            throw new Error('Provider not available');\n        }\n        const targetSoulId = soulId || soulIds[chain];\n        if (!targetSoulId) {\n            throw new Error('Soul identity not available');\n        }\n        try {\n            // Get reputation asset address from registry\n            const registry = chains[chain].registry;\n            const reputationAssetAddress = await registry.getAssetAddress('REPUTATION');\n            // Create reputation asset contract\n            const reputationAsset = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(reputationAssetAddress, _constants_abis__WEBPACK_IMPORTED_MODULE_3__.REPUTATION_ASSET_ABI, chains[chain].provider);\n            // Get reputation score\n            const score = await reputationAsset.balanceOfSoul(targetSoulId);\n            return score;\n        } catch (error) {\n            console.error(\"Error getting reputation on \".concat(chain, \":\"), error);\n            throw error;\n        }\n    };\n    // Get rewards on a specific chain\n    const getRewardsOnChain = async (chain, soulId)=>{\n        if (!chains[chain].provider) {\n            throw new Error('Provider not available');\n        }\n        const targetSoulId = soulId || soulIds[chain];\n        if (!targetSoulId) {\n            throw new Error('Soul identity not available');\n        }\n        try {\n            // Get rewards asset address from registry\n            const registry = chains[chain].registry;\n            const rewardsAssetAddress = await registry.getAssetAddress('REWARDS');\n            // Create rewards asset contract\n            const rewardsAsset = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(rewardsAssetAddress, _constants_abis__WEBPACK_IMPORTED_MODULE_3__.REWARDS_ASSET_ABI, chains[chain].provider);\n            // Get pending rewards\n            const rewards = await rewardsAsset.getPendingRewards(targetSoulId);\n            return rewards;\n        } catch (error) {\n            console.error(\"Error getting rewards on \".concat(chain, \":\"), error);\n            throw error;\n        }\n    };\n    const value = {\n        chains,\n        activeChain,\n        soulIds,\n        loading,\n        error,\n        switchToChain,\n        createSoulIdentity,\n        routeReputationCrossChain,\n        routeRewardsCrossChain,\n        getReputationOnChain,\n        getRewardsOnChain\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CrossChainContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/nick/Documents/GitHub/d4l-wl2/example/nextjs/contexts/CrossChainContext.js\",\n        lineNumber: 437,\n        columnNumber: 5\n    }, this);\n}\n_s(CrossChainProvider, \"apFny4ZSR4dHDZ33/faSHTlt8bs=\", false, function() {\n    return [\n        _Web3Context__WEBPACK_IMPORTED_MODULE_2__.useWeb3\n    ];\n});\n_c = CrossChainProvider;\nfunction useCrossChain() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CrossChainContext);\n    if (context === undefined) {\n        throw new Error('useCrossChain must be used within a CrossChainProvider');\n    }\n    return context;\n}\n_s1(useCrossChain, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CrossChainContext);\nvar _c;\n$RefreshReg$(_c, \"CrossChainProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./contexts/CrossChainContext.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"(pages-dir-browser)/./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contexts_Web3Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/Web3Context */ \"(pages-dir-browser)/./contexts/Web3Context.js\");\n/* harmony import */ var _contexts_SoulStreamContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../contexts/SoulStreamContext */ \"(pages-dir-browser)/./contexts/SoulStreamContext.js\");\n/* harmony import */ var _contexts_CrossChainContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contexts/CrossChainContext */ \"(pages-dir-browser)/./contexts/CrossChainContext.js\");\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/Layout */ \"(pages-dir-browser)/./components/Layout.js\");\n\n\n\n\n\n\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_Web3Context__WEBPACK_IMPORTED_MODULE_2__.Web3Provider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_SoulStreamContext__WEBPACK_IMPORTED_MODULE_3__.SoulStreamProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_CrossChainContext__WEBPACK_IMPORTED_MODULE_4__.CrossChainProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"/Users/nick/Documents/GitHub/d4l-wl2/example/nextjs/pages/_app.js\",\n                        lineNumber: 13,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/nick/Documents/GitHub/d4l-wl2/example/nextjs/pages/_app.js\",\n                    lineNumber: 12,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nick/Documents/GitHub/d4l-wl2/example/nextjs/pages/_app.js\",\n                lineNumber: 11,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/nick/Documents/GitHub/d4l-wl2/example/nextjs/pages/_app.js\",\n            lineNumber: 10,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/nick/Documents/GitHub/d4l-wl2/example/nextjs/pages/_app.js\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3BhZ2VzL19hcHAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUErQjtBQUN3QjtBQUNZO0FBQ0E7QUFDekI7QUFFMUMsU0FBU0ksTUFBTSxLQUF3QjtRQUF4QixFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRSxHQUF4QjtJQUNiLHFCQUNFLDhEQUFDTiwrREFBWUE7a0JBQ1gsNEVBQUNDLDJFQUFrQkE7c0JBQ2pCLDRFQUFDQywyRUFBa0JBOzBCQUNqQiw0RUFBQ0MsMERBQU1BOzhCQUNMLDRFQUFDRTt3QkFBVyxHQUFHQyxTQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1wQztLQVpTRjtBQWNULGlFQUFlQSxLQUFLQSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbmljay9Eb2N1bWVudHMvR2l0SHViL2Q0bC13bDIvZXhhbXBsZS9uZXh0anMvcGFnZXMvX2FwcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3N0eWxlcy9nbG9iYWxzLmNzcyc7XG5pbXBvcnQgeyBXZWIzUHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0cy9XZWIzQ29udGV4dCc7XG5pbXBvcnQgeyBTb3VsU3RyZWFtUHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0cy9Tb3VsU3RyZWFtQ29udGV4dCc7XG5pbXBvcnQgeyBDcm9zc0NoYWluUHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0cy9Dcm9zc0NoYWluQ29udGV4dCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiAoXG4gICAgPFdlYjNQcm92aWRlcj5cbiAgICAgIDxTb3VsU3RyZWFtUHJvdmlkZXI+XG4gICAgICAgIDxDcm9zc0NoYWluUHJvdmlkZXI+XG4gICAgICAgICAgPExheW91dD5cbiAgICAgICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgICAgICA8L0xheW91dD5cbiAgICAgICAgPC9Dcm9zc0NoYWluUHJvdmlkZXI+XG4gICAgICA8L1NvdWxTdHJlYW1Qcm92aWRlcj5cbiAgICA8L1dlYjNQcm92aWRlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTXlBcHA7XG4iXSwibmFtZXMiOlsiV2ViM1Byb3ZpZGVyIiwiU291bFN0cmVhbVByb3ZpZGVyIiwiQ3Jvc3NDaGFpblByb3ZpZGVyIiwiTGF5b3V0IiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/_app.js\n"));

/***/ })

});